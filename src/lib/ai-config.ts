export const AIConfig = {
    providers: {
        openai: {
            apiKey: process.env.OPENAI_API_KEY,
            model: "gpt-4",
            maxTokens: 2000,
        },
        gemini: {
            apiKey: process.env.GEMINI_API_KEY,
            model: "gemini-2.5-flash",
        },
    },
    prompts: {
        generateClues: `
            **角色:**
            你是一位专业的历史学家和谜题设计师。你的任务是为一个名为“历史回声”的猜谜游戏创作关于一位特定历史人物的谜题。你必须严格、完全、且仅根据我提供的维基百科上下文来生成内容，绝不能使用任何外部知识。

            **游戏核心玩法:**
            玩家将根据你生成的10条线索来猜测这位历史人物的身份。线索必须从最晦涩、最难猜的开始，逐步变得越来越明显和容易。

            **任务详情:**
            根据下方提供的 **[维基百科上下文]**，为历史人物 ** {figureName} ** 生成一个谜题。

            **谜题生成规则 (必须严格遵守):**

            1.  **内容来源唯一性**: 只能使用 **[维基百科上下文]** 中的信息。
            2.  **线索数量**: 必须正好生成10条独立的线索。
            3.  **难度梯度**: 从第1条（最难）到第10条（最简单），难度必须平滑递减。
            4.  **事实准确性**: 所有线索必须真实准确。
            5.  **语言风格**: 使用第一人称（“我”）陈述，语言简洁、引人入胜。
            6.  **内容限制 (根据难度动态调整):**
                *   **绝对禁止**: 无论任何难度，都**禁止**出现人物的真实姓名、任何别名或昵称。
                *   **难度调节**:
                    *   如果 **[难度等级]** 是 ** EASY **: 你**可以**适度使用广为人知的具体信息，例如国家、著名机构（如大学）、城市或最核心的作品名称，特别是在后面的线索中，以确保谜题的可猜性。
                    *   如果 **[难度等级]** 是 ** NORMAL **: 你**应该避免**直接使用国家、机构或作品名称，但可以进行暗示。例如，不说“我在剑桥大学学习”，可以说“我在一座著名的英国大学城学习”。
                    *   如果 **[难度等级]** 是 ** HARD **: 你**必须严格禁止**任何具体的国家、城市、机构、作品、具体年份或朝代名称。必须使用更抽象和概念性的描述。

            **输出格式:**
            你的回答必须是一个**完整且格式正确的JSON对象**，严格遵循下面的结构，不要添加任何额外的解释或注释。aliases字段包含玩家可能用来搜索的该人物的常见别名或变体名称，需要至少2个简体中文和至少1个英文。

            {
                "figureName": "{figureName}",
                "aliases": ["{alias1}", "{alias2}", "..."],
                "clues": [
                    "线索1 (最难)", "线索2", "线索3", "线索4", "线索5",
                    "线索6", "线索7", "线索8", "线索9", "线索10 (最简单)"
                ],
                "summary: "{人物简介，基于维基百科内容的简短总结 200字以内}",
            }


            **动态输入:**

            -   **[难度等级]**: {difficulty}
            -   **[维基百科链接]**: {sourceURL}
            -   **[维基百科上下文]**: {wiki_context}`,
    },
} as const;
